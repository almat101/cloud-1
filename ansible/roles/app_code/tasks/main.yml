# roles/app_code/tasks/main.yml
# This playbook handles application code deployment on the target host.
# It performs the following steps:
# 1. Clones or pulls the application repository from GitHub into the specified directory as the target user.
# 2. Displays whether the code was updated/cloned or was already up-to-date.
# 3. Sets a fact (code_was_updated) based on whether the repository was changed, which is later used by other roles (like docker_app) to determine if a rebuild is
---
- name: Clone or pull application code from GitHub
  ansible.builtin.git:
    repo: "{{ app_repo_url }}"
    dest: "{{ app_dest_path }}"
    version: "{{ app_branch }}"
    accept_hostkey: yes  # Important for first-time connections
    force: yes # da testare questo forza il push anche se ci sono modifiche locali non pushate
  register: git_clone_result
  become: yes
  become_user: "{{ app_owner_user }}"

- name: Verify if code was cloned/updated successfully
  ansible.builtin.debug:
    msg: "Code deployment status: {{ git_clone_result.changed | ternary('UPDATED/CLONED', 'ALREADY UP-TO-DATE') }}"

# Store the code change status for later using in docker_app tasks:
- name: Set fact for code changes
  ansible.builtin.set_fact:
    code_was_updated: "{{ git_clone_result.changed }}"
    # code_was_updated will be true if:
    # - The repo is cloned for the first time (changed: true)
    # - A pull is performed and there are updates (changed: true)
    # - It will be false if there are no changes to apply (changed: false)