---
# Common tasks for all environments
- name: Common setup for all environments
  hosts: all
  gather_facts: yes
  become: yes
  tasks:
    - name: Set environment-specific fact
      set_fact:
        is_prod: "{{ inventory_hostname in groups['prod'] | default([]) }}"
        is_dev: "{{ inventory_hostname in groups['dev'] | default([]) }}"

# Development environment deployment
- name: Deploy cloud-1 (Development)
  hosts: dev
  become: yes
  gather_facts: yes
  
  vars_files:
    - ../vars/secrets_dev.yml
  
  roles:
    - base_setup
    - app_code
    - app_config
    - docker_app
  
  vars:
    env_name: "development"
    app_env: "dev"

# Production environment deployment
- name: Deploy cloud-1 (Production)
  hosts: prod
  become: yes
  gather_facts: yes
  
  vars_files:
    - ../vars/secrets_prod.yml
  
  roles:
    - base_setup
    - app_code
    - app_config
    - docker_app
  
  vars:
    env_name: "production"
    app_env: "prod"

#recap commands:

### Development deplyment
# Deploy to localhost: does not use SSH, runs directly on the local machine

# ansible-playbook playbooks/deploy.yml --limit dev --ask-vault-pass --ask-become-pass

#### Production Deployment 

# Deploy to EC2 instance: uses SSH to connect to the remote production server (defined in the [prod] group of the inventory).
# Configure SSH key into this machine (e.g., ~/.ssh/ec2_ubuntu.pem)
# ansible-playbook playbooks/deploy.yml --limit prod --ask-vault-pass

# Run only specific roles
# ansible-playbook playbooks/deploy.yml --limit dev --tags "app_config" --ask-vault-pass