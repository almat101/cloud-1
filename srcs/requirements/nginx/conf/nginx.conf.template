user  nginx;
worker_processes  auto;

pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    #Default server - Handles requests with unknown/unmatched server_name
    server {
        listen 80;
        listen [::]:80;
        server_name _;
        
        return 444;  # Connection closed
    }

    # HTTP server for HTTPS redirect only
    server {
        listen 80;
        listen [::]:80;

        server_name ${DOMAIN_NAME};

        # Redirect everything to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    server {
		listen 443 ssl;
		listen [::]:443 ssl;
        http2 on;

		server_name ${DOMAIN_NAME};

        # SSL configuration
        ssl_certificate /etc/letsencrypt/live/${DOMAIN_NAME}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${DOMAIN_NAME}/privkey.pem;
        
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;


		index index.php index.html index.htm;

		root /var/www/html;
        
        # Protect wp-admin and wp-login.php with IP restrictions
        location ~ ^/(wp-admin|wp-login\.php) {
            
            # Allow only these specific IPs
            # allow 82.55.232.67;     # Home IP
            allow 172.18.0.0/16;    # Docker network
            # allow 127.0.0.1;        # Localhost
            # allow 151.13.27.220;    # 42 IP
            deny all;               # Block all other IPs
            
            # Environment variable to control access 
            set $wp_admin_access "${WP_ADMIN_ACCESSIBLE}";
            if ($wp_admin_access != "true") {
                return 403;
            }

            try_files $uri $uri/ /index.php?$query_string =404;
            
            # PHP processing for wp-admin
            location ~ \.php$ {
                include fastcgi_params;
                fastcgi_pass wordpress:9000;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                fastcgi_index index.php;
            }
        }


		location / {
			try_files $uri $uri/ /index.php?$query_string =404;  #this ensure correct healthcheck error, the oldest one redirect always
		}

		# PHP handler for wp
		location ~ \.php$ {
            include fastcgi_params;
            fastcgi_pass wordpress:9000;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_index index.php;
    	}

        #redirection for phpmyadmin
        location = /phpmyadmin {
            return 301 $scheme://$host/phpmyadmin/;
        }

		# phpMyAdmin configuration 
        location /phpmyadmin/ {

            # Restrict PMA access by IP
            #allow 82.55.232.67;     # Home IP
            #allow 151.13.27.220;    # School IP
            #allow 172.18.0.0/16;    # Docker network
            #allow 127.0.0.1;        # Localhost
            #deny all;

            # Environment variable to control access on pma
            set $pma_access "${PMA_ACCESSIBLE}";
            if ($pma_access != "true") {
                return 403;
            }

            alias /var/www/phpmyadmin/;
            index index.php index.html;
            
            # PHP handler for phpMyAdmin
            location ~ ^/phpmyadmin/(.+\.php)$ {
                try_files $uri =404;
                fastcgi_split_path_info ^/phpmyadmin/(.+\.php)(.*)$;
                fastcgi_pass phpmyadmin:9000;
                fastcgi_index index.php;
                include fastcgi_params;
                fastcgi_param SCRIPT_FILENAME /var/www/phpmyadmin/$1;
                fastcgi_param PATH_INFO $fastcgi_path_info;
            }
            
            # Static files for phpMyAdmin
            location ~* ^/phpmyadmin/(.+\.(jpg|jpeg|gif|css|png|js|ico|html|xml|txt))$ {
                alias /var/www/phpmyadmin/$1;
            }
        }

		location = /health {
			# access_log off;
			return 200 "Healthy\n";
            add_header Content-Type text/plain;
		}
	}
}